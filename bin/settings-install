#!/bin/bash
set -e

if [ ! -f composer.json ] || [ "$#" -ne 1 ] || [[ ! "$1" =~ ^(7|8)$ ]]; then echo "Usage (in composer root): $0 [DrupalMajorVersion]"; exit 1; fi
major="$1"

# Dirs.
targetDir=.
binDir=$(dirname $(realpath "$0"))
ourDir=$(dirname "$binDir")

#set -v

# Migrations.
[ -f drush/drushrc.php ] && sed -i -e "s:'../settings/generated/local/siteurl.php':'../settings/generated/siteurl.php':g" drush/drushrc.php

# Ensure web and docroot dirs.
[ -d web ] && [ ! -e docroot ] && ln -s web docroot
[ -d docroot ] && [ ! -e web ] && ln -s docroot web

# Copy stuff that is trivial or needed before the build.
rsync -r --links --keep-dirlinks "$ourDir/copy/" "$targetDir/"
rsync -r --links --keep-dirlinks "$ourDir/copy$major/" "$targetDir/"

# Scaffold (copy if not exists).
rsync -r --ignore-existing --keep-dirlinks "$ourDir/scaffold/" "$targetDir/"
rsync -r --ignore-existing --keep-dirlinks "$ourDir/scaffold$major/" "$targetDir/"

# Replacement for ln -r in busybox. https://stackoverflow.com/a/2565106/606859
function absolute() {
if [ ${1:0:1} = '/' ]; then echo -e "$1"; else local p="$(pwd)/$1"; echo -e ${p%/.}; fi
}
function relpath() {
# usage: relpath from to

if [[ "$1" == "$2" ]]
then
    echo "."
    exit
fi

IFS="/"

local current=($1)
local absolute=($2)

local abssize=${#absolute[@]}
local cursize=${#current[@]}
local level
local i
local newpath

while [[ ${absolute[level]} == ${current[level]} ]]
do
    (( level++ ))
    if (( level > abssize || level > cursize ))
    then
        break
    fi
done

for ((i = level; i < cursize; i++))
do
    if ((i > level))
    then
        newpath=$newpath"/"
    fi
    newpath=$newpath".."
done

for ((i = level; i < abssize; i++))
do
    if [[ -n $newpath ]]
    then
        newpath=$newpath"/"
    fi
    newpath=$newpath${absolute[i]}
done

echo "$newpath"
}

# Symlink.
for symlinkDir in "$ourDir/symlink" "$ourDir/symlink$major"; do
  for filePath in $(cd "$symlinkDir"; find . -type f); do
    filePath=${filePath#./}
    fileDir=$(dirname "$targetDir/$filePath")
    mkdir -p $fileDir
    relSymlinkDir=$(relpath $(absolute "$fileDir") $(absolute "$symlinkDir"))
    ln -sf "$relSymlinkDir/$filePath" "$targetDir/$filePath"
  done
done

# Create Hash salt.
hash_salt_file="$targetDir/settings/generated/custom/hash_salt.php"
generate_hash_salt() {
  "$binDir/settings-hashsalt" "$hash_salt_file"
}
if [ -f "$hash_salt_file" ]
then
  echo "Hash salt exists. To generate: \"$(dirname $0)/settings-hashsalt\" \"$hash_salt_file\""
else
  generate_hash_salt
fi

# Copy D8 container yamls.
[ "$major" -eq 8  ] && ( [ -f web/sites/default/services.yml ] || cp web/sites/default/default.services.yml web/sites/default/services.yml )
